{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","initialTodos","App","useState","newTitle","setNewTitle","titleError","setTitleError","setUserId","userIdError","setUserIdError","setTodos","action","method","onSubmit","e","preventDefault","newId","Math","max","prevTodos","type","placeholder","value","onChange","test","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb61a5fd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../api/types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { Todo } from '../../api/types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo:Todo\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => (\n  <article\n    key={todo.id}\n    data-id={todo.id}\n    className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import { Todo } from '../../api/types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './api/types/Todo';\n\nconst getUserById = (userId:number) => {\n  return usersFromServer.find(user => user.id === userId);\n};\n\nconst initialTodos = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [newTitle, setNewTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const handleChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    const REGEX = /^[a-zA-Zа-яА-ЯЇїІіЄєҐґ'0-9 ]*$/;\n\n    if (!REGEX.test(e.target.value)) {\n      return;\n    }\n\n    setNewTitle(e.target.value);\n    setTitleError(false);\n  };\n\n  const handleSelect = (e:React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setUserIdError(false);\n  };\n\n  const handleSubmit = (e:React.FormEvent) => {\n    e.preventDefault();\n\n    setTitleError(!newTitle);\n    setUserIdError(!userId);\n\n    if (!newTitle || !userId) {\n      return;\n    }\n\n    const newId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    setTodos(prevTodos => [\n      ...prevTodos,\n      {\n        id: newId,\n        title: newTitle,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      },\n    ]);\n\n    setNewTitle('');\n    setUserId(0);\n    setTitleError(false);\n    setUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={handleChange}\n          />\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\">\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userIdError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}